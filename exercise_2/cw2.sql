DROP Table REGIONS CASCADE CONSTRAINTS;
DROP TABLE COUNTRIES CASCADE CONSTRAINTS;
DROP TABLE LOCATIONS CASCADE CONSTRAINTS;
DROP TABLE DEPARTMENTS CASCADE CONSTRAINTS;
DROP TABLE EMPLOYEES CASCADE CONSTRAINTS;
DROP TABLE JOB_HISTORY CASCADE CONSTRAINTS;
DROP TABLE JOBS CASCADE CONSTRAINTS;


SELECT * FROM hr.countries;
create table countries as select * from hr.countries;

create table departments as SELECT * FROM HR.departments;

create table employees as SELECT * FROM HR.employees;

create table job_history as SELECT * FROM HR.job_history;

create table locations AS SELECT * FROM HR.locations;

create table jobs as SELECT * FROM HR.jobs;

create table regions as SELECT * FROM HR.regions;
commit;


ALTER TABLE REGIONS ADD CONSTRAINT regions_pk PRIMARY KEY (REGION_ID);
ALTER TABLE COUNTRIES ADD CONSTRAINT countries_pk PRIMARY KEY (COUNTRY_ID);
ALTER TABLE COUNTRIES ADD FOREIGN KEY (REGION_ID) REFERENCES REGIONS(REGION_ID);

ALTER TABLE LOCATIONS ADD CONSTRAINT locations_pk PRIMARY KEY (LOCATION_ID);
ALTER TABLE LOCATIONS ADD FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRIES(COUNTRY_ID);

ALTER TABLE DEPARTMENTS ADD CONSTRAINT departments_pk PRIMARY KEY (DEPARTMENT_ID);
ALTER TABLE DEPARTMENTS ADD FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS(LOCATION_ID);

ALTER TABLE EMPLOYEES ADD CONSTRAINT employees_pk PRIMARY KEY (EMPLOYEE_ID);
ALTER TABLE EMPLOYEES ADD FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID);

ALTER TABLE EMPLOYEES ADD FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID);
ALTER TABLE DEPARTMENTS ADD FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID);
ALTER TABLE JOBS ADD CONSTRAINT jobs_pk PRIMARY KEY (JOB_ID);
ALTER TABLE EMPLOYEES ADD FOREIGN KEY (JOB_ID) REFERENCES JOBS(JOB_ID);

ALTER TABLE JOB_HISTORY ADD CONSTRAINT job_history_pk PRIMARY KEY (EMPLOYEE_ID, START_DATE);
ALTER TABLE JOB_HISTORY ADD FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID);
ALTER TABLE JOB_HISTORY ADD FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID);
ALTER TABLE JOB_HISTORY ADD FOREIGN KEY (JOB_ID) REFERENCES JOBS(JOB_ID);

#1
SELECT CONCAT(CONCAT(FIRST_NAME, ' '), SALARY) AS wynagrodzenie FROM EMPLOYEES 
WHERE DEPARTMENT_ID = 20 OR DEPARTMENT_ID = 50 AND SALARY BETWEEN 2000 AND 7000 
ORDER BY wynagrodzenie;


#2
SELECT LAST_NAME, HIRE_DATE, &USER_INPUT as USER_OUTPUT FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL AND HIRE_DATE BETWEEN TO_DATE('2005/01/01', 'yyyy/mm/dd') AND TO_DATE('2005/12/31', 'yyyy/mm/dd')
ORDER BY USER_OUTPUT;

#3
SELECT last_name||' '||first_name AS employee, salary, phone_number FROM employees
WHERE last_name LIKE '__e%' AND first_name LIKE '%' || '&input' || '%'
ORDER BY 1 DESC, 2 ASC;

#4
SELECT first_name, last_name, salary, ROUND(MONTHS_BETWEEN
(sysdate, hire_date),0) "summed_months" FROM employees;

#5
SELECT MIN(SALARY) AS MIN_SALARY, ROUND(AVG(SALARY)) AS AVERAGE, DEPARTMENT_ID FROM EMPLOYEES 
WHERE  DEPARTMENT_ID IS NOT NULL 
GROUP BY DEPARTMENT_ID 
HAVING MIN(SALARY) > 5000;


#6
SELECT a.last_name, a.department_id, b.department_name, a.job_id FROM employees a, departments b, locations c
WHERE a.department_id = b.department_id 
AND b.location_id = c.location_id AND city = 'Toronto';

#7
SELECT e.FIRST_NAME, e.LAST_NAME 
FROM EMPLOYEES e 
WHERE e.DEPARTMENT_ID IN (SELECT e2.DEPARTMENT_ID
FROM EMPLOYEES e2 
WHERE FIRST_NAME ='Jennifer');


#8
SELECT DEPARTMENT_NAME FROM DEPARTMENTS MINUS 
SELECT distinct DEPARTMENT_NAME 
FROM DEPARTMENTS 
RIGHT JOIN EMPLOYEES E ON E.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;


#9
CREATE TABLE Job_grades  AS SELECT * FROM HR.Job_grades; 


#10
SELECT e.FIRST_NAME, e.LAST_NAME, e.JOB_ID, d.DEPARTMENT_NAME, e.SALARY, 
(SELECT GRADE FROM JOB_GRADES 
	WHERE MIN_SALARY <= e.SALARY AND MAX_SALARY >= e.SALARY) AS GRADE 
FROM EMPLOYEES e 
LEFT JOIN DEPARTMENTS d ON (e.DEPARTMENT_ID = d.DEPARTMENT_ID);


#11
SELECT last_name, first_name, salary FROM employees
WHERE salary > (SELECT AVG(salary) FROM employees)
ORDER BY salary DESC;


#12
SELECT e.FIRST_NAME, e.LAST_NAME FROM  EMPLOYEES e
WHERE e.DEPARTMENT_ID IN  (SELECT e2.DEPARTMENT_ID FROM EMPLOYEES e2 WHERE e2.LAST_NAME LIKE '%u%');

